/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */
buildscript {
	 dependencies {
		 classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.10.RELEASE")
	  	}
}	

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id  "org.springframework.boot" version "2.1.10.RELEASE"
}

apply plugin: 'application'
//apply plugin: 'docker'


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
	api group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.1.10.RELEASE', ext: 'pom'
	api group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.10.RELEASE'
	testImplementation 'org.testng:testng:7.1.0'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.1.RELEASE'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.2.1.RELEASE'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    //https:/mvnrepository.com/artifact/org.springframework.boot
	mavenCentral()
}

def webappDir = "$projectDir/src/main/adference-challenge"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

mainClassName  = 'com.adference.challenge.ChallengeApp'

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build","--prod"
	} else {
		commandLine "ng", "build"
	}
}

task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
		commandLine "npm.cmd", "install", "--no-optional", "--no-shrinkwrap"
	} else {
		commandLine "npm", "install", "--no-optional", "--no-shrinkwrap"
	}
}

